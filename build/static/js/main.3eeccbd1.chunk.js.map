{"version":3,"sources":["logo.svg","components/TicTacToe/GameSymbols.jsx","components/TicTacToe/Modal.jsx","components/TicTacToe/index.jsx","App.js","reportWebVitals.js","index.js"],"names":["Cross","className","Zero","Modal","playerInfo","player","GAME","PLAYER","SIGN","ZERO","label","value","CROSS","TicTacToe","useState","board","setBoard","gameOver","setGameOver","sign","currentPlayer","setCurrentPlayer","lastChance","setLastChance","useEffect","rowIndex","colIndex","currentSymbol","rowCheckResult","colCheckResult","dia1CheckResult","dia2CheckResult","i","length","r","c","validateBoard","map","row","cell","onClick","prevBoard","handleTurnPlayed","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.3eeccbd1.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","const Cross = () => <span className=\"game-symbol\">&times;</span>\n\nconst Zero = () => <span className=\"game-symbol\">0</span>\n\nexport { Cross, Zero }\n","import React from 'react';\n\nconst Modal = ({ playerInfo }) => (\n  <div className=\"banner-layout\">\n    <div className=\"winner-banner\">\n      <h1>{playerInfo.player} Wins the Match!!!</h1>\n    </div>\n  </div>\n);\n\nexport default Modal;\n","import React, { useEffect, useState } from 'react';\nimport './style.css';\nimport { Cross, Zero } from './GameSymbols';\nimport Modal from './Modal';\n\nconst GAME = [\n  [-1, -1, -1],\n  [-1, -1, -1],\n  [-1, -1, -1]\n];\n\nconst PLAYER = {\n  PLAYER1: 'PLAYER - 1',\n  PLAYER2: 'PLAYER - 2'\n};\n\nconst SIGN = {\n  ZERO: { label: 'ZERO', value: 0 },\n  CROSS: { label: 'CROSS', value: 1 }\n};\n\nconst validateBoard = (board, lastChance) => {\n  const { rowIndex, colIndex } = lastChance;\n  const currentSymbol = board[rowIndex][colIndex];\n\n  let rowCheckResult = true;\n  let colCheckResult = true;\n  let dia1CheckResult = false;\n  let dia2CheckResult = false;\n\n  for (let i = 0; i < board[rowIndex].length; i++) {\n    if (board[rowIndex][i] !== currentSymbol) {\n      rowCheckResult = false;\n      break;\n    }\n  }\n\n  for (let i = 0; i < board[colIndex].length; i++) {\n    if (board[i][colIndex] !== currentSymbol) {\n      colCheckResult = false;\n      break;\n    }\n  }\n\n  if (rowIndex === colIndex) {\n    let r = board.length - 1;\n    let c = board.length - 1;\n\n    while (r >= 0 && c >= 0) {\n      if (board[r][c] !== currentSymbol) {\n        dia1CheckResult = false;\n        break;\n      }\n      r = r - 1;\n      c = c - 1;\n    }\n\n    if (r < 0 && c < 0) dia1CheckResult = true;\n  }\n\n  let r = 0;\n  let c = board.length - 1;\n\n  if (board.length - 1 - rowIndex === colIndex) {\n    while (r < board.length && c >= 0) {\n      if (board[r][c] !== currentSymbol) {\n        dia2CheckResult = false;\n        break;\n      }\n      r = r + 1;\n      c = c - 1;\n    }\n\n    if (r === board.length && c === -1) dia2CheckResult = true;\n  }\n\n  return rowCheckResult || colCheckResult || dia1CheckResult || dia2CheckResult;\n};\n\n\nconst TicTacToe = () => {\n  const [board, setBoard] = useState(GAME);\n\n  const [gameOver, setGameOver] = useState(false);\n\n  const [currentPlayer, setCurrentPlayer] = useState({\n    player: PLAYER.PLAYER1,\n    sign: SIGN.ZERO\n  });\n\n  const [lastChance, setLastChance] = useState(null);\n\n  useEffect(() => {\n    if (!lastChance) return;\n\n    if (validateBoard(board, lastChance)) {\n      setGameOver(true);\n      return;\n    }\n\n    setCurrentPlayer(currentPlayer =>\n      currentPlayer.player === PLAYER.PLAYER1\n        ? {\n            player: PLAYER.PLAYER2,\n            sign: SIGN.CROSS\n          }\n        : {\n            player: PLAYER.PLAYER1,\n            sign: SIGN.ZERO\n          }\n    );\n  }, [board, lastChance]);\n\n  const handleTurnPlayed = (rowIndex, colIndex) => {\n    setBoard(prevBoard => {\n      prevBoard[rowIndex][colIndex] = currentPlayer.sign.value;\n      return [...prevBoard];\n    });\n\n    setLastChance({ rowIndex, colIndex });\n  };\n\n  return (\n    <div className=\"game-layout\">\n      <h1>Tic Tac Toe</h1>\n      <div className=\"game-board\">\n        {board.map((row, rowIndex) => {\n          return (\n            <>\n              {row.map((cell, colIndex) => (\n                <div\n                  key={`${rowIndex}-${colIndex}`}\n                  className=\"cell\"\n                  onClick={() => handleTurnPlayed(rowIndex, colIndex)}\n                >\n                  {cell !== -1 && (cell === 0 ? <Zero /> : <Cross />)}\n                </div>\n              ))}\n            </>\n          );\n        })}\n      </div>\n\n      <footer>\n        <h3>{`${currentPlayer.player} turn : Please place a ${currentPlayer.sign.label}`}</h3>\n      </footer>\n      {gameOver && <Modal playerInfo={currentPlayer} />}\n    </div>\n  );\n};\n\nexport default TicTacToe;\n","import React, { useState } from 'react'\nimport logo from './logo.svg'\nimport './App.css'\nimport { backendData } from './fetchData'\nimport TicTacToe from './components/TicTacToe'\n\nconst FileDisplayView = ({ file, children }) => {\n  const [expanded, setExpanded] = useState(true)\n  console.log('rendering !!!')\n  const handleClick = event => {\n    setExpanded(!expanded)\n    event.stopPropagation()\n  }\n\n  return (\n    <div className=\"parent-view\" onClick={handleClick}>\n      <h4 key={file.id}>{file.name}</h4>\n      {expanded && children}\n    </div>\n  )\n}\n\nconst DisplayFiles = ({ filesData }) => {\n  function getFileView(file) {\n    return (\n      <FileDisplayView file={file}>\n        {file.children && file.children.length && <div>{file.children.map(child => getFileView(child))}</div>}\n      </FileDisplayView>\n    )\n  }\n\n  return <>{filesData.map(file => getFileView(file))}</>\n}\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <h1>React Interview Problems</h1>\n      {/*<DisplayFiles filesData={backendData} />*/}\n      <TicTacToe/>\n    </div>\n  )\n}\n\nexport default App\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}